version: '3.8'

services:
  # Namenode HDFS
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=bigdata-cluster
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      - CORE_CONF_hadoop_http_staticuser_user=root
      - CORE_CONF_hadoop_proxyuser_hue_hosts=*
      - CORE_CONF_hadoop_proxyuser_hue_groups=*
      - CORE_CONF_io_compression_codecs=org.apache.hadoop.io.compress.SnappyCodec
      - HDFS_CONF_dfs_webhdfs_enabled=true
      - HDFS_CONF_dfs_permissions_enabled=false
      - HDFS_CONF_dfs_nameservices=cluster1
    env_file:
      - ./hadoop.env
    networks:
      - bigdata-network

  # Datanode HDFS
  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
      CORE_CONF_fs_defaultFS: hdfs://namenode:9000
    ports:
      - "9864:9864"
    env_file:
      - ./hadoop.env
    networks:
      - bigdata-network
    depends_on:
      - namenode

  # ResourceManager YARN
  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
    env_file:
      - ./hadoop.env
    ports:
      - "8088:8088"
    networks:
      - bigdata-network
    depends_on:
      - namenode
      - datanode

  # NodeManager YARN
  nodemanager1:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env
    ports:
      - "8042:8042"
    networks:
      - bigdata-network
    depends_on:
      - namenode
      - datanode
      - resourcemanager

  # HistoryServer
  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./hadoop.env
    ports:
      - "8188:8188"
    networks:
      - bigdata-network
    depends_on:
      - namenode
      - datanode
      - resourcemanager

  # Spark Master
  spark-master:
    image: bde2020/spark-master:3.2.1-hadoop3.2
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    volumes:
      - ../src:/app/src
      - ../data:/app/data
    networks:
      - bigdata-network

  # Spark Worker 1
  spark-worker-1:
    image: bde2020/spark-worker:3.2.1-hadoop3.2
    container_name: spark-worker-1
    depends_on:
      - spark-master
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
    volumes:
      - ../src:/app/src
      - ../data:/app/data
    networks:
      - bigdata-network

  # Spark Worker 2
  spark-worker-2:
    image: bde2020/spark-worker:3.2.1-hadoop3.2
    container_name: spark-worker-2
    depends_on:
      - spark-master
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
    volumes:
      - ../src:/app/src
      - ../data:/app/data
    networks:
      - bigdata-network

  # Jupyter Notebook
  jupyter:
    build:
      context: ./jupyter
      dockerfile: Dockerfile
    container_name: jupyter-bigdata
    ports:
      - "8888:8888"
    volumes:
      - ../notebooks:/home/jovyan/work/notebooks
      - ../src:/home/jovyan/work/src
      - ../data:/home/jovyan/work/data
      - ../config:/home/jovyan/work/config
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - GRANT_SUDO=yes
      - JUPYTER_TOKEN=bigdata2024
    networks:
      - bigdata-network
    depends_on:
      - spark-master
      - namenode

  # Aplicação Principal
  bigdata-app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: bigdata-app
    volumes:
      - ../src:/app/src
      - ../data:/app/data
      - ../config:/app/config
      - ../notebooks:/app/notebooks
      - ../pipeline_yahoo_spark.py:/app/pipeline_yahoo_spark.py
    environment:
      - SPARK_MASTER_URL=spark://spark-master:7077
      - HDFS_NAMENODE_URL=hdfs://namenode:9000
      - PYTHONPATH=/app/src
    networks:
      - bigdata-network
    depends_on:
      - spark-master
      - namenode
      - datanode
    command: tail -f /dev/null

volumes:
  hadoop_namenode:
  hadoop_datanode:
  hadoop_historyserver:

networks:
  bigdata-network:
    driver: bridge